---------------------------------------------------------------------------
KERNEL: wrap_mykernel
---------------------------------------------------------------------------
ARGUMENTS:
start: ValueArg, type: np:dtype('int32')
end: ValueArg, type: np:dtype('int32')
dat1: type: np:dtype('float64'), shape: (None, 2), dim_tags: (N1:stride:2, N0:stride:1) in aspace: global
dat0: type: np:dtype('float64'), shape: (None, 2), dim_tags: (N1:stride:2, N0:stride:1) out aspace: global
map0: type: np:dtype('int32'), shape: (None, 3), dim_tags: (N1:stride:3, N0:stride:1) in aspace: global
---------------------------------------------------------------------------
DOMAINS:
[end, start] -> { [n] : start <= n < end }
{ [i2] : i2 = 0 }
{ [i5] : 0 <= i5 <= 2 }
{ [i4] : 0 <= i4 <= 1 }
{ [i0] : i0 = 0 }
{ [i1] : 0 <= i1 <= 2 }
{ [i3] : 0 <= i3 <= 1 }
{ [i6] : 0 <= i6 <= 2 }
{ [i7] : 0 <= i7 <= 1 }
{ [i8] : i8 = 0 }
{ [i9] : i9 = 0 }
{ [i10] : 0 <= i10 <= 2 }
{ [i11] : 0 <= i11 <= 1 }
{ [i12] : i12 = 0 }
{ [i13] : 0 <= i13 <= 2 }
{ [i14] : 0 <= i14 <= 1 }
---------------------------------------------------------------------------
INAME TAGS:
i0: None
i1: None
i2: None
i3: None
i4: None
i5: None
i6: None
i7: None
i8: None
i9: None
i10: None
i11: None
i12: None
i13: None
i14: None
n: None
---------------------------------------------------------------------------
TEMPORARIES:
t0: type: np:dtype('float64'), shape: (1, 3, 2), dim_tags: (N2:stride:6, N1:stride:2, N0:stride:1) aspace: auto
t1: type: np:dtype('float64'), shape: (1, 3, 2), dim_tags: (N2:stride:6, N1:stride:2, N0:stride:1) aspace: auto
---------------------------------------------------------------------------
INSTRUCTIONS:
    for n, i14, i13, i12
↱           t1[i12, i13, i14] = 0  {id=statement0}
│     end i14, i13, i12
│     for i10, i11, i9
│↱          t0[i9, i10, i11] = dat1[map0[n, i10], i11]  {id=statement1}
││    end i10, i11, i9
└└↱   [i0,i1,i3]: t1[i0, i1, i3] = mykernel([i2,i5,i4]: t0[i2, i5, i4])  {id=statement3}
  │   for i8, i7, i6
  └         dat0[map0[n, i6], i7] = t1[i8, i6, i7]  {id=statement2}
    end n, i8, i7, i6
---------------------------------------------------------------------------
---------------------------------------------------------------------------
KERNEL: mykernel
---------------------------------------------------------------------------
ARGUMENTS:
x: type: np:dtype('float64'), shape: (1, 3, 2), dim_tags: (N2:stride:6, N1:stride:2, N0:stride:1) in aspace: global
y: type: np:dtype('float64'), shape: (1, 3, 2), dim_tags: (N2:stride:6, N1:stride:2, N0:stride:1) out aspace: global
---------------------------------------------------------------------------
DOMAINS:
{ [i] : 0 <= i <= 2 }
---------------------------------------------------------------------------
INAME TAGS:
i: None
---------------------------------------------------------------------------
INSTRUCTIONS:
for i
  y[i // 6, i // 2 + (-3)*(i // 6), i + (-2)*(i // 2)] = 2*x[i // 6, i // 2 + (-3)*(i // 6), i + (-2)*(i // 2)]  {id=insn}
end i
---------------------------------------------------------------------------